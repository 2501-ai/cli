{
  "configurations": [
    {
      "name": "run query",
      "type": "node",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "runtimeExecutable": "npm",
      "runtimeArgs": [
        "run",
        "dev",
        "--",
        "query",
        "--workspace",
        "${workspaceFolder}/.debug-workspace",
        "--credentials",
        "${workspaceFolder}/conf/credentials.json",
        "Initiliase a sample NodeJS Express backend project. Add a health check endpoint. Apply best practices in API Design and coding standards. Install the node modules with yarn, make sure the project is properly configured, gitignored and stop there."
      ],
      "console": "integratedTerminal",
      "envFile": "${workspaceFolder}/.env"
    },
    {
      "name": "run init",
      "type": "node",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "runtimeExecutable": "npm",
      "runtimeArgs": [
        "run",
        "dev",
        "--",
        "init",
        "--workspace",
        "${workspaceFolder}/.debug-workspace"
      ],
      "console": "integratedTerminal",
      "envFile": "${workspaceFolder}/.env"
    },
    {
      "name": "memory test",
      "type": "node",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "runtimeExecutable": "npm",
      "runtimeArgs": [
        "run",
        "dev",
        "--",
        "query",
        "--workspace",
        "${workspaceFolder}/.debug-workspace",
        "--credentials",
        "${workspaceFolder}/conf/credentials.json",
        "Generate a large dataset with multiple files to test memory management. Create 50 files of increasing size (starting from 10mb to 500MB), process them sequentially, and report memory usage statistics after each batch of 10 files. Stop if memory usage exceeds 80% of the limit."
      ],
      "console": "integratedTerminal",
      "envFile": "${workspaceFolder}/.env"
    }
  ]
}
